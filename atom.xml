<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>すうのつぶやき</title>
  <subtitle>ブログより気軽につぶやくところです</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://karasugawasu.github.io/"/>
  <updated>2017-11-03T08:18:27.925Z</updated>
  <id>https://karasugawasu.github.io/</id>
  
  <author>
    <name>Suu Karasugawa</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>録画サーバを構築し直した</title>
    <link href="https://karasugawasu.github.io/2017/11/03/rokuga/"/>
    <id>https://karasugawasu.github.io/2017/11/03/rokuga/</id>
    <published>2017-11-03T08:01:23.000Z</published>
    <updated>2017-11-03T08:18:27.925Z</updated>
    
    <content type="html"><![CDATA[<p>というわけで、色んな所で色々言っていたけど、録画サーバを構築し直しました。<br>以前の構成はWindows10＋DockerToolBoxとかいうクソみたいな感じだったんですが、<br>録画の変換ツールがWindowsだといい感じのがあってなかなか捨てがたかったんですよね。</p>
<p>ただ、掃除したときにコンセントが抜けちゃって以降なぜかMirakurunが動作しなくなってしまって、<br>入れ直したりとか環境見直したりしても変わらなかったのでUbuntuで構築し直すことにしました。</p>
<p>構築については以下にまとめてます。<br><a href="https://crowi.precure.fun/user/karasugawa/%E3%82%B5%E3%83%BC%E3%83%90/2017/10/18/%E9%8C%B2%E7%94%BB%E3%82%B5%E3%83%BC%E3%83%90" target="_blank" rel="external">Ubuntu Server 17.04 + Mirakurun + Chinachu で録画サーバ</a>  </p>
<p>で、構築してからすでに半月以上経過していますが今の所問題なく稼働し続けています。<br>まぁ相変わらずTVKだけうつりがわるいですがこれはもうチューナーのせいでしょう。</p>
<p>あとは変換。。<br>今の所変換ツールは導入していません。<br>今まで使ってたやつがWindowsオンリーなのでパワーのあるメインPCで変換を行う方法でもいいんですがなんか途中でエラーになるのでそれはまた試して見る感じでw</p>
<p>てな感じでそこら辺はまた記載します。</p>
<p>視聴についてですが、リアルタイム視聴とかもできるだけChinachuの画面からじゃなくてKodiとかM2TSの無変換環境で見るように。。。<br>これはPC自体にあんまりパワーがないのと、小型なので熱を溜め込みたくないからだったり。</p>
<p>ちなみにKodiで見るときは、 <a href="https://github.com/Harekaze/pvr.chinachu" target="_blank" rel="external">ここ</a>のプラグインを使います。<br>Kodiを使わずに見るときはVLCで見るのが一番いいです。<br>VLCは字幕に対応したやつが出てますのでそっちを入れるといいかもです。  </p>
<blockquote>
<p><a href="https://github.com/nkoriyama/vlc-aribsub/wiki" target="_blank" rel="external">vlc-aribsub</a></p>
</blockquote>
<p>てなわけで今日はこのへんで！<br>では、また。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;というわけで、色んな所で色々言っていたけど、録画サーバを構築し直しました。&lt;br&gt;以前の構成はWindows10＋DockerToolBoxとかいうクソみたいな感じだったんですが、&lt;br&gt;録画の変換ツールがWindowsだといい感じのがあってなかなか捨てがたかったんですよね
    
    </summary>
    
    
      <category term="録画サーバ" scheme="https://karasugawasu.github.io/tags/%E9%8C%B2%E7%94%BB%E3%82%B5%E3%83%BC%E3%83%90/"/>
    
  </entry>
  
  <entry>
    <title>ちょっと考える</title>
    <link href="https://karasugawasu.github.io/2017/10/31/171031/"/>
    <id>https://karasugawasu.github.io/2017/10/31/171031/</id>
    <published>2017-10-31T13:33:29.000Z</published>
    <updated>2017-10-31T14:30:54.196Z</updated>
    
    <content type="html"><![CDATA[<p>最近ブログをあんまりちゃんと書いていない。<br>と言うか書いていない。  </p>
<p>大体ブログのネタとか、書こうかなぁとか思ったときって、<br>家にいなかったり手元にPCがなかったりして書くタイミングを逃してしまう。</p>
<a id="more"></a>
<p>いい感じのブログ環境って考えるとやっぱりPCなんだろうけど、<br>ちょっとした時間の隙間とかで書こうと思うとスマホしかなかったりしてなかなか書く気にならなかったりｗ  </p>
<p>HexoがMarkdownなので書きやすいなぁと思っていても環境が限られていたり（GPD Poketで構築）するのでそれもちょっと厳しかったり。</p>
<p>一番いい！と思ったのはconcrete5の投稿用のアプリを作ってそれのエディタをMarkdownにすること。。。</p>
<p>でもこれはちょっとやそっとじゃ作れないのでなかなか難しいはなしだったりｗ</p>
<p>そんな感じで今後もHexoかブログのほうでのんびり記事をかいていきますｗ</p>
<p>では、また。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;最近ブログをあんまりちゃんと書いていない。&lt;br&gt;と言うか書いていない。  &lt;/p&gt;
&lt;p&gt;大体ブログのネタとか、書こうかなぁとか思ったときって、&lt;br&gt;家にいなかったり手元にPCがなかったりして書くタイミングを逃してしまう。&lt;/p&gt;
    
    </summary>
    
    
      <category term="hexo" scheme="https://karasugawasu.github.io/tags/hexo/"/>
    
  </entry>
  
  <entry>
    <title>GPD Pocketの現状</title>
    <link href="https://karasugawasu.github.io/2017/08/28/gpd-%E7%8F%BE%E7%8A%B6/"/>
    <id>https://karasugawasu.github.io/2017/08/28/gpd-現状/</id>
    <published>2017-08-28T11:08:35.000Z</published>
    <updated>2017-08-28T17:24:38.891Z</updated>
    
    <content type="html"><![CDATA[<p>GPD PocketにUbuntuを入れ直してちょっとだけ快適になったので、その後にやったカスタマイズをちょっとメモ。<br>といっても大したことはしていないんですがｗ<br><a id="more"></a><br><!--toc--></p>
<h3><span id="touchegg">Touchegg</span></h3><p>まずはタッチの環境と思い、Toucheggを導入。<br>ついでにTouchegg-gceをビルドしたんですが、<br>今回はインストールせずにそのままにしておきました。</p>
<p>設定は初期のやつからスクロールのものを削除。<br>なんか今回はスクロールがちゃんと作動していたのでその関係です。<br>その後ウィンドウの最大化と最小化を指２本に。<br>画面がちっちゃいのでデフォの３本だとちょっと難しかったので。</p>
<h3><span id="chromium">Chromium</span></h3><p>前回はChromeを入れたんですが、今回はaptで入れられるChromiumにしました。<br>ただ、ログインキーリングがなんちゃらっていうのが出てきたので、<a href="http://s.jkunblog.com/article/175112460.html" target="_blank" rel="external">ここ</a>を参考に対処。<br>前回やったタッチの設定は今回はしていません。</p>
<h3><span id="キーの設定">キーの設定</span></h3><p>Winキーでメニューを出してほしかったので、キーボードのショートカットから<code>/usr/bin/xfce4-popup-whiskermenu</code>をWinキーに割り当てました。</p>
<p>文字入力ですが、Mozcのほうがデフォの入力が直接入力になっているので毎回設定し直すのが面倒なのもあり、Ibusの設定の入力メソッドをMozcのみにして、<br>Mozcの設定でIMEオンオフを切り替えるように変えました。</p>
<p>CapsとかDelete、BS等の変更はしないで、そのままです。</p>
<p>前回おかしかった記号系はキーボードの選択を間違えていただけだったので正しいのにしたら問題なくなりました。</p>
<h3><span id="mikutter">Mikutter</span></h3><p>前回もMikutterを入れていたので今回もすかさず導入です。<br>Pluginは以下の通り。</p>
<p>画像のインライン表示<br><a href="https://github.com/moguno/mikutter-subparts-image" target="_blank" rel="external">mikutter-subparts-image</a><br>タブのアイコンサイズ変更<a href="https://github.com/moguno/mikutter-tab-hardpoint" target="_blank" rel="external">mikutter-tab-hardpoint
</a><br>画像つき投稿を可能にする<a href="https://github.com/moguno/mikutter-uwm-hommage" target="_blank" rel="external">mikutter-uwm-hommage</a></p>
<p>あとはフォントサイズを１７くらいに変更しています。</p>
<h3><span id="guake-ターミナル">Guake (ターミナル)</span></h3><p>ターミナルがちょっと使いづらいと思っていたので他のGPD Pocketユーザさんが使っていたGuakeを導入してみました。<br>普通にaptからインストールできます。</p>
<p>まだ設定等はいじっていません。</p>
<h3><span id="ruby">Ruby</span></h3><p>rbenvをつかって前と同じ感じで入れてます。</p>
<h3><span id="パネル">パネル</span></h3><p>パネルも時計が見やすいように変更しています。<br>一番右側におっきめでデジタル時計を配置。<br>あとは最小限に音量、メール、バッテリーの残りパーセンテージと時間、Wi-Fi、Bluetooth、Mozc、Guakeですね。</p>
<h3><span id="mstdn">mstdn</span></h3><p>Mastodonクライアントをお試しで入れてみました。<br>普通に使いやすいですｗ<br>カスタマイズはしていないですが、LTLをデフォにしておきました。</p>
<h3><span id="hexo">Hexo</span></h3><p>前回も書きましたがHexoの環境をこちらでつくりました。<br>というのもGPD Pocketは基本持ち運び用で、すでに存在しているBlogよりは編集するのに通信も使わなそうだから。<br>あとはオフラインで作成しておいて、あとからデプロイできるっていうのもいいですね。</p>
<p>HexoのPluginについては別の記事でｗ</p>
<h3><span id="atom">Atom</span></h3><p>テキストエディターはAtomを選びました。<br>もともとWindowsで使っているというのもありますし、<br>Markdownのプレビューを見ながらかけるというのが個人的に利点です。<br>もちろん他の言語でもハイライトしてくれるので重宝できます。</p>
<p>この記事もAtomで書いてます。</p>
<p>とそんな感じでしょうか。</p>
<h3><span id="不具合について">不具合について</span></h3><p>不具合も確認しています。<br>まずはBluetoothテザリングは相変わらず無理です。<br>マウスは大丈夫なので完全にだめというわけではないのかもしれないです。</p>
<p>Type-cが認識しないです。<br>ただ、個人的には使うことがないので今のとこ問題なしです。</p>
<p>”T”キーが柔い。。<br>ちょっとだけ他のキーより柔らかくて、一回キートップが外れてしまいました。</p>
<p>サスペンドについては自宅で数時間放置する分には問題ありませんでした。<br>ただ、持ち運んでいるときに勝手に復帰していたのでなにか問題がありそうです。</p>
<p>という感じで今回はこのへんで。<br>このブログは他のブログとの切り分けも兼ねて基本的にGPD Pocket関連ばっかりで行くと思います。</p>
<p>では、また。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;GPD PocketにUbuntuを入れ直してちょっとだけ快適になったので、その後にやったカスタマイズをちょっとメモ。&lt;br&gt;といっても大したことはしていないんですがｗ&lt;br&gt;
    
    </summary>
    
    
      <category term="gpdpocket" scheme="https://karasugawasu.github.io/tags/gpdpocket/"/>
    
  </entry>
  
  <entry>
    <title>GPD Pocketの話</title>
    <link href="https://karasugawasu.github.io/2017/08/25/gpdpocket/"/>
    <id>https://karasugawasu.github.io/2017/08/25/gpdpocket/</id>
    <published>2017-08-25T14:51:14.000Z</published>
    <updated>2017-08-25T15:32:56.670Z</updated>
    
    <content type="html"><![CDATA[<p>ブログの方に書いていたとおり、最近IGGでGPD Pocketに出資していたためのんびり使っているわけですが、<br>なんか最初にインストールしたXubuntuが安定していなかったのでもう一回入れ直しました。<br><a id="more"></a></p>
<!-- toc -->
<ul>
<li><a href="#使っているやつ">使っているやつ</a></li>
<li><a href="#おかしかった点">おかしかった点</a></li>
<li><a href="#入れ直し">入れ直し</a></li>
<li><a href="#環境">環境</a></li>
</ul>
<!-- tocstop -->
<h3><span id="使っているやつ">使っているやつ</span></h3><p><a href="https://github.com/stockmind/gpd-pocket-ubuntu-respin" target="_blank" rel="external">gpd pocket ubuntu respin</a><br>前回はXubuntu１７．０４を上記をつかって自分でリビルドしたやつ<br>今回はすでに用意されていたリビルド済みのUbuntu１７．０４</p>
<h3><span id="おかしかった点">おかしかった点</span></h3><p>まずイヤホンから音が出ませんでした。。。<br>次にBluetoothテザリングが使えませんでした。<br>接続できる！とおもったら即切れる感じです。。。<br>ただし、マウスとかは使えたので全部が死んでいるわけではなさそう。</p>
<p>上記をなおそうと色々いじっていたら更におかしくなりどうしようもなくなったので入れ直そうと判断ｗ</p>
<h3><span id="入れ直し">入れ直し</span></h3><p>入れ直すのに前回と同じ感じでリビルドしたらまたおかしくなる気もしたので、すでに用意されているUbuntuイメージを使うことに。</p>
<p>れどめに書いてあるとおり普通にインストールしたあと、<br><code>sudo apt install xubuntu-desktop</code><br>を叩いて前とおんなじXfce環境へ！</p>
<p>なんか今回はタッチでのスクロールが使えたり、入力がマシになってたり、いい感じ。</p>
<p>それとイヤホンの件もなおったんですが、Bluetoothテザリングだけはだめで、結局諦めることに。。<br>Wi-Fiが使えないのでできれば使いたかったんですが、仕方ないのでいままで通りUSBテザリングにします。</p>
<h3><span id="環境">環境</span></h3><p>今の所、HexoとRubyの勉強環境のみといった感じです。<br>エディタは前から使っているAtomを選びました。<br>Atomは公式のレポジトリにパッケージが上がっているのでふつうにdpkg installするだけです。</p>
<p>あとは、HexoようにMarkdownの環境を整えて完了です。<br><div class="twitter-wrapper"><blockquote class="twitter-tweet"><a href="https://twitter.com/karasu_sue/status/901102350214905856" target="_blank" rel="external"></a></blockquote></div><script async defer src="//platform.twitter.com/widgets.js" charset="utf-8"></script></p>
<p>てなかんじで今回はこのへんで！</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;ブログの方に書いていたとおり、最近IGGでGPD Pocketに出資していたためのんびり使っているわけですが、&lt;br&gt;なんか最初にインストールしたXubuntuが安定していなかったのでもう一回入れ直しました。&lt;br&gt;
    
    </summary>
    
    
      <category term="gpdpocket" scheme="https://karasugawasu.github.io/tags/gpdpocket/"/>
    
  </entry>
  
  <entry>
    <title>Crowiを導入してみた！</title>
    <link href="https://karasugawasu.github.io/2017/08/23/crowi/"/>
    <id>https://karasugawasu.github.io/2017/08/23/crowi/</id>
    <published>2017-08-23T12:13:45.000Z</published>
    <updated>2017-08-25T14:48:02.332Z</updated>
    
    <content type="html"><![CDATA[<p>日々なんかしらメモしたくなることが多く、なにかいいメモ帳ないかなぁと思いながらEvernoteを使っていたんですが、<br>ふと、さくらのVPSでCrowiのスタートアップスクリプトの提供を・・という記事を見つけて、TwitterのTLでもCrowiという単語が流れてきたのもあり、<br>いろいろ調べてみたところ、Markdownで気軽に書けるWikiやメモ帳といった感じだったので導入してみました。</p>
<p>で、さっそくその時のメモ書きです。</p>
<a id="more"></a>
<!-- toc -->
<ul>
<li><a href="#crowi構築">crowi構築</a><ul>
<li><a href="#基本的な内容">基本的な内容</a></li>
<li><a href="#インストール">インストール</a><ul>
<li><a href="#mongodb">MongoDB</a></li>
<li><a href="#nodejs">NodeJS</a></li>
<li><a href="#検索できるようにelasticsearchを入れる">検索できるようにElasticsearchを入れる</a></li>
<li><a href="#crowiをインストール">Crowiをインストール</a></li>
<li><a href="#サービスとして登録">サービスとして登録</a></li>
</ul>
</li>
</ul>
</li>
</ul>
<!-- tocstop -->
<h2><span id="crowi構築">crowi構築</span></h2><h3><span id="基本的な内容">基本的な内容</span></h3><blockquote>
<p><a href="http://d.hatena.ne.jp/akishin999/20161225/1482682979" target="_blank" rel="external">http://d.hatena.ne.jp/akishin999/20161225/1482682979</a>  </p>
</blockquote>
<p>Redisはいれていない</p>
<h3><span id="インストール">インストール</span></h3><h4><span id="mongodb">MongoDB</span></h4><p>レポジトリ定義作成<br><code>vim /etc/yum.repos.d/mongodb.repo</code><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">[mongodb]</div><div class="line">name=MongoDB repo</div><div class="line">baseurl=http://downloads-distro.mongodb.org/repo/redhat/os/x86_64/</div><div class="line">gpgcheck=0</div><div class="line">enabled=0</div></pre></td></tr></table></figure></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">yum --enablerepo=mongodb install -y mongodb-org</div></pre></td></tr></table></figure>
<p>DBとユーザーを作成する<br>Mysqlしか知らなかったのでいろいろ調べた<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">mongo</div><div class="line">use 使いたいDB名</div><div class="line">db.createUser(&#123;user: ユーザ名, pwd: パスワード, roles: [&#123;role: &quot;readWrite&quot;, db: 使いたいDB名&#125;]&#125;)</div></pre></td></tr></table></figure></p>
<p>MySQLより分かりやすい気がする</p>
<h4><span id="nodejs">NodeJS</span></h4><p>レポジトリの登録<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">rpm -Uvh https://rpm.nodesource.com/pub_4.x/el/7/x86_64/nodesource-release-el7-1.noarch.rpm</div></pre></td></tr></table></figure></p>
<p>インストールしようとしたらエラーが出たので、以下のコマンドを実行で回避<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">rpm -ivh https://kojipkgs.fedoraproject.org//packages/http-parser/2.7.1/3.el7/x86_64/http-parser-2.7.1-3.el7.x86_64.rpm https://kojipkgs.fedoraproject.org//packages/http-parser/2.7.1/3.el7/x86_64/http-parser-devel-2.7.1-3.el7.x86_64.rpm &amp;&amp; yum -y install nodejs-devel</div></pre></td></tr></table></figure></p>
<p>再度インストールと、ついでに依存系も入れる<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo yum install nodejs krb5-devel gcc-c++ git</div></pre></td></tr></table></figure></p>
<p>(自分の環境だとすでに入っていた)</p>
<p>　　</p>
<h4><span id="検索できるようにelasticsearchを入れる">検索できるようにElasticsearchを入れる</span></h4><p>検索を有効にしておきたいので、Elasticsearchを入れておきます</p>
<p>Javaがいるようなので、入れます（v1.7.0以上じゃないとだめみたいです）<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo yum install java-1.8.0</div></pre></td></tr></table></figure></p>
<p>ElasticsearchをレポジトリからインストールするためGPG-KEYを取得<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">rpm --import https://packages.elastic.co/GPG-KEY-elasticsearch</div></pre></td></tr></table></figure></p>
<p>定義ファイルを作成<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">[elasticsearch-2.x]</div><div class="line">name=Elasticsearch repository for 2.x packages</div><div class="line">baseurl=https://packages.elastic.co/elasticsearch/2.x/centos</div><div class="line">gpgcheck=1</div><div class="line">gpgkey=https://packages.elastic.co/GPG-KEY-elasticsearch</div><div class="line">enabled=0</div></pre></td></tr></table></figure></p>
<p>インストールする<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">yum --enablerepo=elasticsearch-2.x install -y elasticsearch</div></pre></td></tr></table></figure></p>
<p>後はいつも通り有効にしておきます</p>
<p>また、日本語に対応させるためにanalysis-kuromojiを入れます<br>（これがjava 1.7.0じゃないとだめらしい）<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">/usr/share/elasticsearch/bin/plugin install analysis-kuromoji</div></pre></td></tr></table></figure></p>
<p>あとは、Elesticsearchを再起動して正常動作を確認します<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">curl -X GET &apos;http://localhost:9200/_nodes/plugins?pretty&apos;</div></pre></td></tr></table></figure></p>
<h4><span id="crowiをインストール">Crowiをインストール</span></h4><p>インストールするディレクトリを決めておく<br>あとはcloneする<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">git <span class="built_in">clone</span> https://github.com/crowi/crowi.git</div><div class="line"><span class="built_in">cd</span> crowi</div></pre></td></tr></table></figure></p>
<p>最新でチェックアウトする、mastodonでgitがわからず意味不明だったが、その時に調べておいてよかった<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">git checkout $(git tag | sort -V | tail -n 1)</div></pre></td></tr></table></figure></p>
<p>インストール<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">npm install</div></pre></td></tr></table></figure></p>
<p>上記で少し時間がかかったが、終わったらcssとjsをビルドする<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">npm run build</div></pre></td></tr></table></figure></p>
<p>opensslでシード値を出すらしい・・・（よくわかっていないｗ）<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">openssl rand -base64 128 | head -1</div></pre></td></tr></table></figure></p>
<p>　　</p>
<h4><span id="サービスとして登録">サービスとして登録</span></h4><p>serviceの登録は以下の通り<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">[Unit]</div><div class="line"></div><div class="line">Description=Crowi</div><div class="line">After=network.target mongod.service</div><div class="line"></div><div class="line">[Service]</div><div class="line">WorkingDirectory=&#123;配置したフォルダ&#125;</div><div class="line">EnvironmentFile=/etc/systemd/system/crowi.conf</div><div class="line">ExecStart=/usr/bin/node app.js</div><div class="line"></div><div class="line">[Install]</div><div class="line">WantedBy=multi-user.target</div></pre></td></tr></table></figure></p>
<p>設定も一緒に(ポートは自由に)<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">PORT=3500</div><div class="line">NODE_ENV=production</div><div class="line">MONGO_URI=&quot;mongodb://&#123;USER_ID&#125;:&#123;USER_PASSWORD&#125;@localhost/&#123;DB_NAME&#125;&quot;</div><div class="line">ELASTICSEARCH_URI=http://127.0.0.1:9200</div><div class="line">PASSWORD_SEED=&quot;&#123;opensslで出したやつ&#125;&quot;</div><div class="line">FILE_UPLOAD=local</div></pre></td></tr></table></figure></p>
<p>後は起動して確認後、自動起動にして終わり<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">sudo systemctl start crowi.service</div><div class="line">sudo systemctl enable crowi</div></pre></td></tr></table></figure></p>
<p>と、以上で導入が完了しました！<br>ElesticSearchを使用するには、設定の検索管理からBuildNowを押さなきゃいけないので注意です！<br>私は気づかずにエラーになってて無駄に時間くった・・・</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;日々なんかしらメモしたくなることが多く、なにかいいメモ帳ないかなぁと思いながらEvernoteを使っていたんですが、&lt;br&gt;ふと、さくらのVPSでCrowiのスタートアップスクリプトの提供を・・という記事を見つけて、TwitterのTLでもCrowiという単語が流れてきたのもあり、&lt;br&gt;いろいろ調べてみたところ、Markdownで気軽に書けるWikiやメモ帳といった感じだったので導入してみました。&lt;/p&gt;
&lt;p&gt;で、さっそくその時のメモ書きです。&lt;/p&gt;
    
    </summary>
    
    
      <category term="Crowi" scheme="https://karasugawasu.github.io/tags/Crowi/"/>
    
  </entry>
  
  <entry>
    <title>すうのつぶやきについて</title>
    <link href="https://karasugawasu.github.io/2017/08/23/about/"/>
    <id>https://karasugawasu.github.io/2017/08/23/about/</id>
    <published>2017-08-22T20:42:46.000Z</published>
    <updated>2017-08-23T05:59:18.000Z</updated>
    
    <content type="html"><![CDATA[<p>すうのつぶやきではブログ<a href="https://blog.xn--krsgw--n73t.com/" target="_blank" rel="external">嶽内の里</a>からちょっとはみ出した、ほんとにちょっとしたつぶやきを記載していきます</p>
<p>といっても実際の目的はGithub Pagesを利用していい加減Gitに慣れようよｗといった感じだったりします。　　<br>まぁとにかくのんびり書いていくので？よろしくお願いします。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;すうのつぶやきではブログ&lt;a href=&quot;https://blog.xn--krsgw--n73t.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;嶽内の里&lt;/a&gt;からちょっとはみ出した、ほんとにちょっとしたつぶやきを記載していきます&lt;/p&gt;
&lt;p
    
    </summary>
    
    
      <category term="info" scheme="https://karasugawasu.github.io/tags/info/"/>
    
  </entry>
  
</feed>
